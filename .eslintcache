[{"C:\\Users\\User\\my-login-app\\src\\index.js":"1","C:\\Users\\User\\my-login-app\\src\\reportWebVitals.js":"2","C:\\Users\\User\\my-login-app\\src\\App.js":"3","C:\\Users\\User\\my-login-app\\src\\components\\CCLogin.jsx":"4","C:\\Users\\User\\my-login-app\\src\\FC\\FCRgister.js":"5","C:\\Users\\User\\my-login-app\\src\\components\\CCSignIn.jsx":"6","C:\\Users\\User\\my-login-app\\src\\components\\CCMain.jsx":"7","C:\\Users\\User\\my-login-app\\src\\components\\CCNotes.jsx":"8"},{"size":592,"mtime":1611932365804,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1941,"mtime":1612544520567,"results":"12","hashOfConfig":"10"},{"size":6833,"mtime":1612290916792,"results":"13","hashOfConfig":"10"},{"size":252,"mtime":1611907849649,"results":"14","hashOfConfig":"10"},{"size":6177,"mtime":1612418326231,"results":"15","hashOfConfig":"10"},{"size":2043,"mtime":1612417446028,"results":"16","hashOfConfig":"10"},{"size":1112,"mtime":1612547710570,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1c26hf7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"20"},"C:\\Users\\User\\my-login-app\\src\\index.js",[],["42","43"],"C:\\Users\\User\\my-login-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\my-login-app\\src\\App.js",[],"C:\\Users\\User\\my-login-app\\src\\components\\CCLogin.jsx",["44","45","46","47","48","49","50"],"\r\nimport React from 'react';\r\nimport { form , button } from \"react-bootstrap\";\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport { FormControl, Form, Button  ,  FormGroup , FormLabel, FormCheck , onBlur} from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon  } from \"@fortawesome/react-fontawesome\";\r\nimport { faCode, faHighlighter , faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport checkMailValidate   from \"/Users/User/my-login-app/src/FC/FCLogin\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email:'',\r\n            password:'',  \r\n            terms : false\r\n         }\r\n    }\r\n    \r\n    setEmail = (e) => {\r\n        this.setState({email: e.target.value});\r\n        console.log(this.state.email);\r\n        \r\n    };\r\n    mailValid = ()=>{\r\n       checkMailValidate(this.state.email) \r\n    }    \r\n    setPassword = (e) => {\r\n        this.setState({password: e.target.value});\r\n        console.log(this.state.password);\r\n        \r\n    };\r\n\r\n    setTerms = (e)=>{\r\n    //    e.target.value = true;\r\n    //    this.setState({terms : e.target.value});\r\n        return true;\r\n    }\r\n\r\n    SetLogin = () => {\r\n        if(this.state.email === \"\" || this.state.password === \"\") {\r\n            alert('Field cannot be an empty');\r\n            return;\r\n        }\r\n        let details = {email: this.state.email, password:  this.state.password }\r\n        this.props.logIn(details);\r\n        this.setState({ email: \"\", password: \"\"});\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n\r\n            <div id=\"login-form\">\r\n                <h1 style={{textDecoration : \"underline\" , fontSize : \"125px\"}} id=\"login-header\">Login Page</h1>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <FormLabel>Email</FormLabel>\r\n                        <FormControl  style={{flexDirection:\"row\" , width : \"50%\"}}   className=\"login-email\" type=\"email\" value={this.state.email}  onBlur={this.mailValid}   onChange={this.setEmail}  placeholder=\"Enter Email Adress Please\"></FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                    <FormLabel>Password</FormLabel>\r\n                        <FormControl style={{width : \"65%\"}} className=\"login-password\"  type=\"password\" value={this.state.password} onChange={this.setPassword} placeholder=\"Enter Password Please\"></FormControl>\r\n                    </FormGroup>\r\n\r\n                    <div id=\"login-buttom\">\r\n\r\n                    <FormGroup className=\"login-terms\">\r\n                        <FormLabel>Use Term <FormCheck type=\"radio\" aria-label = \"radio-1\" value={this.state.terms} onClick={this.setTerms}></FormCheck></FormLabel>\r\n                        \r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <button style={{borderRadius : \"15%\" , backgroundColor : \" rgb(110, 40, 110)\" , fontFamily:\"ariel\"}} onClick={this.SetLogin}>Login</button>\r\n                    </FormGroup>\r\n                    <Link to=\"/SignIn\" type=\"button\">\r\n                        Register Here\r\n                    </Link>\r\n                    </div>\r\n\r\n                </Form>\r\n                <div>\r\n\r\n            </div>\r\n            {/* <Form style={{width:'60%' ,marginRight:'20%' , marginLeft:'20%'}}>\r\n                <Form.Group controlId=\"formBasicuser_name\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                         <Form.Control type=\"user_name\" value={this.state.email} onChange={this.setUserName} placeholder=\"Enter User Name\" />\r\n                             <Form.Text className=\"text-muted\">\r\n                                   We'll never share your email with anyone else.\r\n                             </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label>Password</Form.Label>\r\n                         <Form.Control type=\"password\" value={this.state.password} onChange={this.setPassword} placeholder=\"Password\" />\r\n                </Form.Group>\r\n       \r\n            </Form>  */}\r\n\r\n           \r\n         </div>\r\n         \r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Link, withRouter } from 'react-router-dom';\r\n// import React, { Component } from 'react';\r\n// import {Button, Form , FormGroup, Label , Input} from 'react-bootstrap';\r\n\r\n\r\n\r\n// class Login extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             user_name: '',\r\n//             password: '',\r\n\r\n//         }\r\n        \r\n//     }\r\n//         user_nameSet = (e)=>{\r\n//             e.preventDefault();\r\n//             this.setState({user_name: e.target.value});\r\n//             console.log(e.target.value);\r\n//             console.log(this.state.user_name.length);\r\n\r\n//         }\r\n\r\n//         passwordSet = (e)=>{\r\n//             e.preventDefault();\r\n\r\n//             this.setState({password: e.target.value});\r\n//             console.log(e.target.value);\r\n//         }\r\n//         LoginSend = (e)=>{\r\n//             e.preventDefault();\r\n//             this.props.SendCheck(this.state.user_name, this.state.password);\r\n//         }\r\n        \r\n//     render() {\r\n\r\n//         return (\r\n\r\n//             <div className=\"Login-Page\">\r\n//              <h1>Login Page </h1>\r\n//              <div id=\"login-form\">\r\n//              <FormGroup>\r\n//                <label className=\"user_name\"> UserName </label>\r\n//                <input type= \"text\"   onChange={this.user_nameSet} placeholder=\"username\"></input>\r\n//              </FormGroup>\r\n//              <FormGroup>\r\n            \r\n//                <label className=\"password\"> Password </label>\r\n//                <input type= \"text\" onChange={this.passwordSet}  placeholder=\"password\"></input>\r\n//              </FormGroup>\r\n            \r\n//              <button className=\"btn-lg btn-dark btn-block\"   onClick={()=>{if(this.state.user_name===\"nir\"){alert('holeee')}}} style={{width: \"100%\"}}>Log in </button>\r\n                \r\n//              </div>\r\n            \r\n//             <Link to=\"/signIn\">Register here</Link>\r\n\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default withRouter(Login);\r\n\r\n\r\n\r\n//            {/* <div className=\"Login_Form\">\r\n//                 <form>\r\n//                     <label>User Name<input type=\"text\" onChange={this.user_name} name=\"user_name\"/><br/>\r\n//                     Pssowrd\r\n//                     <input type=\"text\" onChange={this.password} name=\"password\" />\r\n//                     </label>\r\n//                     <input type=\"submit\" onClick={this.LoginSend}   value=\"Submit\"/>\r\n//                 </form>\r\n//             </div> */}\r\n\r\n\r\n\r\n","C:\\Users\\User\\my-login-app\\src\\FC\\FCRgister.js",["51","52"],"import React, { Component } from 'react';\r\n// import CCLogin from './components/CCLogin';\r\n// import CCSignIn from './components/CCSignIn';\r\n\r\n\r\n// export default function FCRegister(props){\r\n       \r\n\r\n//     function orgenize(){\r\n\r\n//     }\r\n// }\r\n\r\n",["53","54"],"C:\\Users\\User\\my-login-app\\src\\components\\CCSignIn.jsx",["55","56","57","58","59"],"\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport {  select,FormFile,FormControl, Form, Button  ,  FormGroup , FormLabel, FormCheck , onBlur} from \"react-bootstrap\";\r\nimport checkMailValidate   from \"/Users/User/my-login-app/src/FC/FCLogin\";\r\n\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirm_Password: '',\r\n            mail_Validate : false, \r\n            user_name : '',\r\n            picFile : File,\r\n            hobbies :' ',\r\n            notes : []\r\n            //  [\r\n            // {value: 'music', label:'music'} ,\r\n            // {value : 'movies',  label : 'movies'},\r\n            // {value : 'dancing' , label : 'dancing'},\r\n            // {value : 'sports' ,  label : 'sport'}]\r\n        }\r\n  \r\n    }\r\n    //on change functions:\r\n    setEmail = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ email: e.target.value });\r\n        console.log(e.target.value)\r\n    }\r\n    mailValid = ()=>{\r\n        checkMailValidate(this.state.email) \r\n     }   \r\n    setPassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ password: e.target.value });\r\n        console.log(e.target.value)\r\n\r\n    }\r\n    setConfirmPassword = (e) => {\r\n        this.setState({ confirm_Password: e.target.value });\r\n        console.log(e.target.value)\r\n\r\n    }\r\n    setMailValidate = (e)=>{\r\n        this.setState({mail_Validate : e.target.value})\r\n        console.log(e.target.value)\r\n\r\n    }\r\n    setUserName = (e)=>{\r\n        this.setState({user_name : e.target.value});\r\n        console.log(e.target.value)\r\n\r\n    }\r\n    setPicFile = (e)=>{\r\n        // const [selectedFile  , setSelectedFile] = useState(false);\r\n        // setSelectedFile(e.target.File);\r\n        this.setState(e.target.File);\r\n    }\r\n    setHobbies = (e)=>{\r\n        this.setState({hobbies : e.target.value});\r\n        console.log(e.target.value);\r\n    }\r\n    CheckRegistrationInfo = () => {\r\n        if (!(this.state.password === this.state.confirm_Password)) {\r\n            alert(\"password1 && password2 not equal. please try again\");\r\n            return;\r\n        }\r\n        if (this.state.password === \"\" || this.state.email === \"\") {\r\n            alert(\"Empty field\");\r\n            return;\r\n        }\r\n        let user = { email: this.state.email, password: this.state.password, confirm_Password : this.state.confirm_Password, user_name : this.state.user_name,\r\n            picFile : this.state.picFile, hobbies : this.state.hobbies,notes:[] };\r\n        this.props.addUser(user);\r\n        this.setState({ email: \"\", password: \"\", confirm_Password: \"\" , user_name:\"\", hobbies:\"\", picFile:\"\", notes : \"\" });\r\n        this.props.history.push({\r\n            pathname: '/'\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n           \r\n\r\n                   <Form className=\"registration-form\">\r\n                       <FormLabel><h1 style={{fontSize : \"100px\"}}>Registration </h1></FormLabel>\r\n                       \r\n                       <FormGroup className=\"fgr\">Email\r\n                           <FormLabel style={{marginLeft : \"130px\"}} className=\"reg-txt\">\r\n                               <FormControl className=\"reg-field\"   required={true} type=\"email\" placeholder=\"Validat Email Adress Format\"   value={this.state.email} onChange={this.setEmail}></FormControl>\r\n                           </FormLabel>\r\n                       </FormGroup>\r\n                       <FormGroup  className=\"fgr\">(1)Password   \r\n                           <FormLabel  style={{marginLeft : \"20px\"}} className=\"reg-txt\">\r\n                               <FormControl  type=\"pasword\" className=\"reg-field\" placeholder=\"choose password\" value={this.state.password} onChange={this.setPassword}></FormControl>\r\n                           </FormLabel>\r\n                        </FormGroup>\r\n                       <FormGroup>(2)Password\r\n                           <FormLabel style={{marginLeft : \"20px\"}}  className=\"reg-txt\">\r\n                               <FormControl placeholder=\"repet password\" className=\"reg-field\" type=\"confirm_pasword\" value={this.state.confirm_Password} onChange={this.setConfirmPassword}></FormControl>\r\n                           </FormLabel>\r\n                       </FormGroup>\r\n                       <FormGroup>User Name\r\n                           <FormLabel  style={{marginLeft : \"50px\"}} className=\"reg-txt\">\r\n                               <FormControl placeholder=\"choose user name\" className=\"reg-field\" type=\"user_name\" value={this.state.user_name} onChange={this.setUserName}></FormControl>\r\n                           </FormLabel>\r\n                       </FormGroup>\r\n                       <FormGroup>Hobbies \r\n                           <FormLabel   style={{marginLeft : \"90px\"}} className=\"hobbies\" onChange={this.setHobbies}>\r\n                               \r\n                        <select onChange={this.setHobbies}>\r\n                        <option  value=\"Music\"> Music </option>\r\n                        <option value=\"Movies\">Movies</option>\r\n                        <option selected value=\"Dancing\">Dancing </option>\r\n                        <option value=\"Sport\">Sport</option>\r\n                        </select>\r\n                           </FormLabel>\r\n                       </FormGroup>\r\n                       <FormGroup>Upload Picture\r\n                           <FormLabel   style={{width : \"80%\"}} className=\"reg-txt\">\r\n                               <FormControl className=\"reg-field\" type=\"file\" value={this.state.setPicFile}></FormControl>\r\n                           </FormLabel>\r\n                       </FormGroup>\r\n                        <FormGroup> Register\r\n                            <FormLabel>\r\n                                <FormControl    onClick={this.CheckRegistrationInfo} type=\"button\"></FormControl>\r\n                            </FormLabel>\r\n                        </FormGroup>\r\n            </Form>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignIn);\r\n\r\n\r\n","C:\\Users\\User\\my-login-app\\src\\components\\CCMain.jsx",["60","61","62","63"],"import React from 'react';\r\nimport {Link,withRouter} from 'react-router-dom';\r\nimport { FormControl, Form, Button  ,  FormGroup , FormLabel, FormCheck , onBlur} from \"react-bootstrap\";\r\nimport userEvent from '@testing-library/user-event';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            title:'',\r\n            description:''\r\n         }\r\n    }\r\n    setTitle = (e) => {\r\n        this.setState({title: e.target.value});\r\n    };\r\n    setDescription = (e) => {\r\n        this.setState({description: e.target.value});\r\n    };\r\n    setNote = () => {\r\n        if(this.state.title === \"\" || this.state.description === \"\"){\r\n            alert(\"fill the field\");\r\n            return\r\n        }\r\n        let note =  {title: this.state.title , description: this.state.description}\r\n        this.props.addNote(note);\r\n        this.props.addNote(note);\r\n        console.log(note);\r\n        alert(\"Your note \" + this.state.title + \" is saved\");\r\n        this.setState({ title:\"\", description:\"\" });\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"main-form\">\r\n                <FormLabel className=\"main-h1\"> Notes Creator </FormLabel>\r\n                 <div>\r\n                <FormGroup>\r\n                 <FormControl type=\"title\" placeholder=\"Title is here\" onChange={this.setTitle} value={this.state.title}  />\r\n                 <FormControl type=\"description is here\" placeholder=\"Description\" onChange={this.setDescription} value={this.state.description} />\r\n                </FormGroup>\r\n                 <Button variant=\"primary\" onClick={this.setNote}>Save Note</Button>\r\n                 <Link to=\"/notes\">\r\n                 <Button variant=\"danger\">Go 2Note Page</Button>\r\n                 </Link>\r\n                </div>  \r\n                <Link style={{color: \"purple\"}} className=\"main-disconect\"  to='/'>Disconnect</Link>\r\n\r\n               </div> \r\n           \r\n        );\r\n    }\r\n}\r\n       \r\n    \r\n\r\n \r\nexport default withRouter(Main);",["64","65"],"C:\\Users\\User\\my-login-app\\src\\components\\CCNotes.jsx",["66","67","68","69","70","71","72"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {card,  FormControl, Form, Button  ,  FormGroup , FormLabel, FormCheck , onBlur} from \"react-bootstrap\";\r\n\r\nclass Notes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}}\r\n    DeleteNote = (index)=>{\r\n        debugger;\r\n        this.props.delete(index);\r\n    };\r\n    render() {       \r\nreturn ( \r\n    <div style={{textAlign:'center'}}>\r\n    <h1>Notes</h1>\r\n    <div style={{display: 'flex', margin:20}}>\r\n    {this.props.notes.map((note,index)=>\r\n    <Card key = {index}>\r\n         <Card.Body>\r\n             <Card.Title>{note.title}</Card.Title>\r\n             <Card.Text>{note.description}</Card.Text>\r\n             <Button variant=\"danger\" onClick={()=> this.DeleteNote(index)}>Delete</Button>\r\n         </Card.Body>\r\n    </Card>  \r\n    )}\r\n    </div>\r\n    <Link to=\"/main\">\r\n        <Button variant=\"link\">back 2 Main</Button>\r\n    </Link>\r\n</div>\r\n       \r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(Notes);",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":5,"column":29,"nodeType":"79","messageId":"80","endLine":5,"endColumn":35},{"ruleId":"77","severity":1,"message":"82","line":5,"column":75,"nodeType":"79","messageId":"80","endLine":5,"endColumn":81},{"ruleId":"77","severity":1,"message":"83","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":16},{"ruleId":"77","severity":1,"message":"85","line":8,"column":18,"nodeType":"79","messageId":"80","endLine":8,"endColumn":31},{"ruleId":"77","severity":1,"message":"86","line":8,"column":34,"nodeType":"79","messageId":"80","endLine":8,"endColumn":50},{"ruleId":"77","severity":1,"message":"87","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"88","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"73","replacedBy":"89"},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","severity":1,"message":"91","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"77","severity":1,"message":"92","line":4,"column":18,"nodeType":"79","messageId":"80","endLine":4,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":4,"column":46,"nodeType":"79","messageId":"80","endLine":4,"endColumn":52},{"ruleId":"77","severity":1,"message":"93","line":4,"column":80,"nodeType":"79","messageId":"80","endLine":4,"endColumn":89},{"ruleId":"77","severity":1,"message":"82","line":4,"column":92,"nodeType":"79","messageId":"80","endLine":4,"endColumn":98},{"ruleId":"77","severity":1,"message":"94","line":3,"column":23,"nodeType":"79","messageId":"80","endLine":3,"endColumn":27},{"ruleId":"77","severity":1,"message":"93","line":3,"column":63,"nodeType":"79","messageId":"80","endLine":3,"endColumn":72},{"ruleId":"77","severity":1,"message":"82","line":3,"column":75,"nodeType":"79","messageId":"80","endLine":3,"endColumn":81},{"ruleId":"77","severity":1,"message":"95","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":17},{"ruleId":"73","replacedBy":"96"},{"ruleId":"75","replacedBy":"97"},{"ruleId":"77","severity":1,"message":"98","line":4,"column":9,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"99","line":4,"column":16,"nodeType":"79","messageId":"80","endLine":4,"endColumn":27},{"ruleId":"77","severity":1,"message":"94","line":4,"column":29,"nodeType":"79","messageId":"80","endLine":4,"endColumn":33},{"ruleId":"77","severity":1,"message":"100","line":4,"column":46,"nodeType":"79","messageId":"80","endLine":4,"endColumn":55},{"ruleId":"77","severity":1,"message":"101","line":4,"column":58,"nodeType":"79","messageId":"80","endLine":4,"endColumn":67},{"ruleId":"77","severity":1,"message":"93","line":4,"column":69,"nodeType":"79","messageId":"80","endLine":4,"endColumn":78},{"ruleId":"77","severity":1,"message":"82","line":4,"column":81,"nodeType":"79","messageId":"80","endLine":4,"endColumn":87},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'onBlur' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCode' is defined but never used.","'faHighlighter' is defined but never used.","'faEnvelopeSquare' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.",["102"],["103"],"'useState' is defined but never used.","'FormFile' is defined but never used.","'FormCheck' is defined but never used.","'Form' is defined but never used.","'userEvent' is defined but never used.",["102"],["103"],"'card' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]